package com.jkblog.bean;

import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class BlogUserExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table bloguser
     *
     * @mbg.generated Mon Nov 02 23:27:58 CST 2020
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table bloguser
     *
     * @mbg.generated Mon Nov 02 23:27:58 CST 2020
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table bloguser
     *
     * @mbg.generated Mon Nov 02 23:27:58 CST 2020
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bloguser
     *
     * @mbg.generated Mon Nov 02 23:27:58 CST 2020
     */
    public BlogUserExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bloguser
     *
     * @mbg.generated Mon Nov 02 23:27:58 CST 2020
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bloguser
     *
     * @mbg.generated Mon Nov 02 23:27:58 CST 2020
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bloguser
     *
     * @mbg.generated Mon Nov 02 23:27:58 CST 2020
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bloguser
     *
     * @mbg.generated Mon Nov 02 23:27:58 CST 2020
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bloguser
     *
     * @mbg.generated Mon Nov 02 23:27:58 CST 2020
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bloguser
     *
     * @mbg.generated Mon Nov 02 23:27:58 CST 2020
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bloguser
     *
     * @mbg.generated Mon Nov 02 23:27:58 CST 2020
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bloguser
     *
     * @mbg.generated Mon Nov 02 23:27:58 CST 2020
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bloguser
     *
     * @mbg.generated Mon Nov 02 23:27:58 CST 2020
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bloguser
     *
     * @mbg.generated Mon Nov 02 23:27:58 CST 2020
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table bloguser
     *
     * @mbg.generated Mon Nov 02 23:27:58 CST 2020
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        protected void addCriterionForJDBCDate(String condition, Date value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value.getTime()), property);
        }

        protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                dateList.add(new java.sql.Date(iter.next().getTime()));
            }
            addCriterion(condition, dateList, property);
        }

        protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
        }

        public Criteria andUserIdIsNull() {
            addCriterion("userId is null");
            return (Criteria) this;
        }

        public Criteria andUserIdIsNotNull() {
            addCriterion("userId is not null");
            return (Criteria) this;
        }

        public Criteria andUserIdEqualTo(Integer value) {
            addCriterion("userId =", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotEqualTo(Integer value) {
            addCriterion("userId <>", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdGreaterThan(Integer value) {
            addCriterion("userId >", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("userId >=", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdLessThan(Integer value) {
            addCriterion("userId <", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdLessThanOrEqualTo(Integer value) {
            addCriterion("userId <=", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdIn(List<Integer> values) {
            addCriterion("userId in", values, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotIn(List<Integer> values) {
            addCriterion("userId not in", values, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdBetween(Integer value1, Integer value2) {
            addCriterion("userId between", value1, value2, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotBetween(Integer value1, Integer value2) {
            addCriterion("userId not between", value1, value2, "userId");
            return (Criteria) this;
        }

        public Criteria andUserNameIsNull() {
            addCriterion("userName is null");
            return (Criteria) this;
        }

        public Criteria andUserNameIsNotNull() {
            addCriterion("userName is not null");
            return (Criteria) this;
        }

        public Criteria andUserNameEqualTo(String value) {
            addCriterion("userName =", value, "userName");
            return (Criteria) this;
        }

        public Criteria andUserNameNotEqualTo(String value) {
            addCriterion("userName <>", value, "userName");
            return (Criteria) this;
        }

        public Criteria andUserNameGreaterThan(String value) {
            addCriterion("userName >", value, "userName");
            return (Criteria) this;
        }

        public Criteria andUserNameGreaterThanOrEqualTo(String value) {
            addCriterion("userName >=", value, "userName");
            return (Criteria) this;
        }

        public Criteria andUserNameLessThan(String value) {
            addCriterion("userName <", value, "userName");
            return (Criteria) this;
        }

        public Criteria andUserNameLessThanOrEqualTo(String value) {
            addCriterion("userName <=", value, "userName");
            return (Criteria) this;
        }

        public Criteria andUserNameLike(String value) {
            addCriterion("userName like", value, "userName");
            return (Criteria) this;
        }

        public Criteria andUserNameNotLike(String value) {
            addCriterion("userName not like", value, "userName");
            return (Criteria) this;
        }

        public Criteria andUserNameIn(List<String> values) {
            addCriterion("userName in", values, "userName");
            return (Criteria) this;
        }

        public Criteria andUserNameNotIn(List<String> values) {
            addCriterion("userName not in", values, "userName");
            return (Criteria) this;
        }

        public Criteria andUserNameBetween(String value1, String value2) {
            addCriterion("userName between", value1, value2, "userName");
            return (Criteria) this;
        }

        public Criteria andUserNameNotBetween(String value1, String value2) {
            addCriterion("userName not between", value1, value2, "userName");
            return (Criteria) this;
        }

        public Criteria andUserPasswordIsNull() {
            addCriterion("userPassword is null");
            return (Criteria) this;
        }

        public Criteria andUserPasswordIsNotNull() {
            addCriterion("userPassword is not null");
            return (Criteria) this;
        }

        public Criteria andUserPasswordEqualTo(String value) {
            addCriterion("userPassword =", value, "userPassword");
            return (Criteria) this;
        }

        public Criteria andUserPasswordNotEqualTo(String value) {
            addCriterion("userPassword <>", value, "userPassword");
            return (Criteria) this;
        }

        public Criteria andUserPasswordGreaterThan(String value) {
            addCriterion("userPassword >", value, "userPassword");
            return (Criteria) this;
        }

        public Criteria andUserPasswordGreaterThanOrEqualTo(String value) {
            addCriterion("userPassword >=", value, "userPassword");
            return (Criteria) this;
        }

        public Criteria andUserPasswordLessThan(String value) {
            addCriterion("userPassword <", value, "userPassword");
            return (Criteria) this;
        }

        public Criteria andUserPasswordLessThanOrEqualTo(String value) {
            addCriterion("userPassword <=", value, "userPassword");
            return (Criteria) this;
        }

        public Criteria andUserPasswordLike(String value) {
            addCriterion("userPassword like", value, "userPassword");
            return (Criteria) this;
        }

        public Criteria andUserPasswordNotLike(String value) {
            addCriterion("userPassword not like", value, "userPassword");
            return (Criteria) this;
        }

        public Criteria andUserPasswordIn(List<String> values) {
            addCriterion("userPassword in", values, "userPassword");
            return (Criteria) this;
        }

        public Criteria andUserPasswordNotIn(List<String> values) {
            addCriterion("userPassword not in", values, "userPassword");
            return (Criteria) this;
        }

        public Criteria andUserPasswordBetween(String value1, String value2) {
            addCriterion("userPassword between", value1, value2, "userPassword");
            return (Criteria) this;
        }

        public Criteria andUserPasswordNotBetween(String value1, String value2) {
            addCriterion("userPassword not between", value1, value2, "userPassword");
            return (Criteria) this;
        }

        public Criteria andUserDescriptionIsNull() {
            addCriterion("userDescription is null");
            return (Criteria) this;
        }

        public Criteria andUserDescriptionIsNotNull() {
            addCriterion("userDescription is not null");
            return (Criteria) this;
        }

        public Criteria andUserDescriptionEqualTo(String value) {
            addCriterion("userDescription =", value, "userDescription");
            return (Criteria) this;
        }

        public Criteria andUserDescriptionNotEqualTo(String value) {
            addCriterion("userDescription <>", value, "userDescription");
            return (Criteria) this;
        }

        public Criteria andUserDescriptionGreaterThan(String value) {
            addCriterion("userDescription >", value, "userDescription");
            return (Criteria) this;
        }

        public Criteria andUserDescriptionGreaterThanOrEqualTo(String value) {
            addCriterion("userDescription >=", value, "userDescription");
            return (Criteria) this;
        }

        public Criteria andUserDescriptionLessThan(String value) {
            addCriterion("userDescription <", value, "userDescription");
            return (Criteria) this;
        }

        public Criteria andUserDescriptionLessThanOrEqualTo(String value) {
            addCriterion("userDescription <=", value, "userDescription");
            return (Criteria) this;
        }

        public Criteria andUserDescriptionLike(String value) {
            addCriterion("userDescription like", value, "userDescription");
            return (Criteria) this;
        }

        public Criteria andUserDescriptionNotLike(String value) {
            addCriterion("userDescription not like", value, "userDescription");
            return (Criteria) this;
        }

        public Criteria andUserDescriptionIn(List<String> values) {
            addCriterion("userDescription in", values, "userDescription");
            return (Criteria) this;
        }

        public Criteria andUserDescriptionNotIn(List<String> values) {
            addCriterion("userDescription not in", values, "userDescription");
            return (Criteria) this;
        }

        public Criteria andUserDescriptionBetween(String value1, String value2) {
            addCriterion("userDescription between", value1, value2, "userDescription");
            return (Criteria) this;
        }

        public Criteria andUserDescriptionNotBetween(String value1, String value2) {
            addCriterion("userDescription not between", value1, value2, "userDescription");
            return (Criteria) this;
        }

        public Criteria andUserGenderIsNull() {
            addCriterion("userGender is null");
            return (Criteria) this;
        }

        public Criteria andUserGenderIsNotNull() {
            addCriterion("userGender is not null");
            return (Criteria) this;
        }

        public Criteria andUserGenderEqualTo(String value) {
            addCriterion("userGender =", value, "userGender");
            return (Criteria) this;
        }

        public Criteria andUserGenderNotEqualTo(String value) {
            addCriterion("userGender <>", value, "userGender");
            return (Criteria) this;
        }

        public Criteria andUserGenderGreaterThan(String value) {
            addCriterion("userGender >", value, "userGender");
            return (Criteria) this;
        }

        public Criteria andUserGenderGreaterThanOrEqualTo(String value) {
            addCriterion("userGender >=", value, "userGender");
            return (Criteria) this;
        }

        public Criteria andUserGenderLessThan(String value) {
            addCriterion("userGender <", value, "userGender");
            return (Criteria) this;
        }

        public Criteria andUserGenderLessThanOrEqualTo(String value) {
            addCriterion("userGender <=", value, "userGender");
            return (Criteria) this;
        }

        public Criteria andUserGenderLike(String value) {
            addCriterion("userGender like", value, "userGender");
            return (Criteria) this;
        }

        public Criteria andUserGenderNotLike(String value) {
            addCriterion("userGender not like", value, "userGender");
            return (Criteria) this;
        }

        public Criteria andUserGenderIn(List<String> values) {
            addCriterion("userGender in", values, "userGender");
            return (Criteria) this;
        }

        public Criteria andUserGenderNotIn(List<String> values) {
            addCriterion("userGender not in", values, "userGender");
            return (Criteria) this;
        }

        public Criteria andUserGenderBetween(String value1, String value2) {
            addCriterion("userGender between", value1, value2, "userGender");
            return (Criteria) this;
        }

        public Criteria andUserGenderNotBetween(String value1, String value2) {
            addCriterion("userGender not between", value1, value2, "userGender");
            return (Criteria) this;
        }

        public Criteria andUserCreateTimeIsNull() {
            addCriterion("userCreateTime is null");
            return (Criteria) this;
        }

        public Criteria andUserCreateTimeIsNotNull() {
            addCriterion("userCreateTime is not null");
            return (Criteria) this;
        }

        public Criteria andUserCreateTimeEqualTo(Date value) {
            addCriterion("userCreateTime =", value, "userCreateTime");
            return (Criteria) this;
        }

        public Criteria andUserCreateTimeNotEqualTo(Date value) {
            addCriterion("userCreateTime <>", value, "userCreateTime");
            return (Criteria) this;
        }

        public Criteria andUserCreateTimeGreaterThan(Date value) {
            addCriterion("userCreateTime >", value, "userCreateTime");
            return (Criteria) this;
        }

        public Criteria andUserCreateTimeGreaterThanOrEqualTo(Date value) {
            addCriterion("userCreateTime >=", value, "userCreateTime");
            return (Criteria) this;
        }

        public Criteria andUserCreateTimeLessThan(Date value) {
            addCriterion("userCreateTime <", value, "userCreateTime");
            return (Criteria) this;
        }

        public Criteria andUserCreateTimeLessThanOrEqualTo(Date value) {
            addCriterion("userCreateTime <=", value, "userCreateTime");
            return (Criteria) this;
        }

        public Criteria andUserCreateTimeIn(List<Date> values) {
            addCriterion("userCreateTime in", values, "userCreateTime");
            return (Criteria) this;
        }

        public Criteria andUserCreateTimeNotIn(List<Date> values) {
            addCriterion("userCreateTime not in", values, "userCreateTime");
            return (Criteria) this;
        }

        public Criteria andUserCreateTimeBetween(Date value1, Date value2) {
            addCriterion("userCreateTime between", value1, value2, "userCreateTime");
            return (Criteria) this;
        }

        public Criteria andUserCreateTimeNotBetween(Date value1, Date value2) {
            addCriterion("userCreateTime not between", value1, value2, "userCreateTime");
            return (Criteria) this;
        }

        public Criteria andUserBirthDayIsNull() {
            addCriterion("userBirthDay is null");
            return (Criteria) this;
        }

        public Criteria andUserBirthDayIsNotNull() {
            addCriterion("userBirthDay is not null");
            return (Criteria) this;
        }

        public Criteria andUserBirthDayEqualTo(Date value) {
            addCriterionForJDBCDate("userBirthDay =", value, "userBirthDay");
            return (Criteria) this;
        }

        public Criteria andUserBirthDayNotEqualTo(Date value) {
            addCriterionForJDBCDate("userBirthDay <>", value, "userBirthDay");
            return (Criteria) this;
        }

        public Criteria andUserBirthDayGreaterThan(Date value) {
            addCriterionForJDBCDate("userBirthDay >", value, "userBirthDay");
            return (Criteria) this;
        }

        public Criteria andUserBirthDayGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("userBirthDay >=", value, "userBirthDay");
            return (Criteria) this;
        }

        public Criteria andUserBirthDayLessThan(Date value) {
            addCriterionForJDBCDate("userBirthDay <", value, "userBirthDay");
            return (Criteria) this;
        }

        public Criteria andUserBirthDayLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("userBirthDay <=", value, "userBirthDay");
            return (Criteria) this;
        }

        public Criteria andUserBirthDayIn(List<Date> values) {
            addCriterionForJDBCDate("userBirthDay in", values, "userBirthDay");
            return (Criteria) this;
        }

        public Criteria andUserBirthDayNotIn(List<Date> values) {
            addCriterionForJDBCDate("userBirthDay not in", values, "userBirthDay");
            return (Criteria) this;
        }

        public Criteria andUserBirthDayBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("userBirthDay between", value1, value2, "userBirthDay");
            return (Criteria) this;
        }

        public Criteria andUserBirthDayNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("userBirthDay not between", value1, value2, "userBirthDay");
            return (Criteria) this;
        }

        public Criteria andUserBlogCountIsNull() {
            addCriterion("userBlogCount is null");
            return (Criteria) this;
        }

        public Criteria andUserBlogCountIsNotNull() {
            addCriterion("userBlogCount is not null");
            return (Criteria) this;
        }

        public Criteria andUserBlogCountEqualTo(Integer value) {
            addCriterion("userBlogCount =", value, "userBlogCount");
            return (Criteria) this;
        }

        public Criteria andUserBlogCountNotEqualTo(Integer value) {
            addCriterion("userBlogCount <>", value, "userBlogCount");
            return (Criteria) this;
        }

        public Criteria andUserBlogCountGreaterThan(Integer value) {
            addCriterion("userBlogCount >", value, "userBlogCount");
            return (Criteria) this;
        }

        public Criteria andUserBlogCountGreaterThanOrEqualTo(Integer value) {
            addCriterion("userBlogCount >=", value, "userBlogCount");
            return (Criteria) this;
        }

        public Criteria andUserBlogCountLessThan(Integer value) {
            addCriterion("userBlogCount <", value, "userBlogCount");
            return (Criteria) this;
        }

        public Criteria andUserBlogCountLessThanOrEqualTo(Integer value) {
            addCriterion("userBlogCount <=", value, "userBlogCount");
            return (Criteria) this;
        }

        public Criteria andUserBlogCountIn(List<Integer> values) {
            addCriterion("userBlogCount in", values, "userBlogCount");
            return (Criteria) this;
        }

        public Criteria andUserBlogCountNotIn(List<Integer> values) {
            addCriterion("userBlogCount not in", values, "userBlogCount");
            return (Criteria) this;
        }

        public Criteria andUserBlogCountBetween(Integer value1, Integer value2) {
            addCriterion("userBlogCount between", value1, value2, "userBlogCount");
            return (Criteria) this;
        }

        public Criteria andUserBlogCountNotBetween(Integer value1, Integer value2) {
            addCriterion("userBlogCount not between", value1, value2, "userBlogCount");
            return (Criteria) this;
        }

        public Criteria andUserEmailIsNull() {
            addCriterion("userEmail is null");
            return (Criteria) this;
        }

        public Criteria andUserEmailIsNotNull() {
            addCriterion("userEmail is not null");
            return (Criteria) this;
        }

        public Criteria andUserEmailEqualTo(String value) {
            addCriterion("userEmail =", value, "userEmail");
            return (Criteria) this;
        }

        public Criteria andUserEmailNotEqualTo(String value) {
            addCriterion("userEmail <>", value, "userEmail");
            return (Criteria) this;
        }

        public Criteria andUserEmailGreaterThan(String value) {
            addCriterion("userEmail >", value, "userEmail");
            return (Criteria) this;
        }

        public Criteria andUserEmailGreaterThanOrEqualTo(String value) {
            addCriterion("userEmail >=", value, "userEmail");
            return (Criteria) this;
        }

        public Criteria andUserEmailLessThan(String value) {
            addCriterion("userEmail <", value, "userEmail");
            return (Criteria) this;
        }

        public Criteria andUserEmailLessThanOrEqualTo(String value) {
            addCriterion("userEmail <=", value, "userEmail");
            return (Criteria) this;
        }

        public Criteria andUserEmailLike(String value) {
            addCriterion("userEmail like", value, "userEmail");
            return (Criteria) this;
        }

        public Criteria andUserEmailNotLike(String value) {
            addCriterion("userEmail not like", value, "userEmail");
            return (Criteria) this;
        }

        public Criteria andUserEmailIn(List<String> values) {
            addCriterion("userEmail in", values, "userEmail");
            return (Criteria) this;
        }

        public Criteria andUserEmailNotIn(List<String> values) {
            addCriterion("userEmail not in", values, "userEmail");
            return (Criteria) this;
        }

        public Criteria andUserEmailBetween(String value1, String value2) {
            addCriterion("userEmail between", value1, value2, "userEmail");
            return (Criteria) this;
        }

        public Criteria andUserEmailNotBetween(String value1, String value2) {
            addCriterion("userEmail not between", value1, value2, "userEmail");
            return (Criteria) this;
        }

        public Criteria andUserFollowCountIsNull() {
            addCriterion("userFollowCount is null");
            return (Criteria) this;
        }

        public Criteria andUserFollowCountIsNotNull() {
            addCriterion("userFollowCount is not null");
            return (Criteria) this;
        }

        public Criteria andUserFollowCountEqualTo(Integer value) {
            addCriterion("userFollowCount =", value, "userFollowCount");
            return (Criteria) this;
        }

        public Criteria andUserFollowCountNotEqualTo(Integer value) {
            addCriterion("userFollowCount <>", value, "userFollowCount");
            return (Criteria) this;
        }

        public Criteria andUserFollowCountGreaterThan(Integer value) {
            addCriterion("userFollowCount >", value, "userFollowCount");
            return (Criteria) this;
        }

        public Criteria andUserFollowCountGreaterThanOrEqualTo(Integer value) {
            addCriterion("userFollowCount >=", value, "userFollowCount");
            return (Criteria) this;
        }

        public Criteria andUserFollowCountLessThan(Integer value) {
            addCriterion("userFollowCount <", value, "userFollowCount");
            return (Criteria) this;
        }

        public Criteria andUserFollowCountLessThanOrEqualTo(Integer value) {
            addCriterion("userFollowCount <=", value, "userFollowCount");
            return (Criteria) this;
        }

        public Criteria andUserFollowCountIn(List<Integer> values) {
            addCriterion("userFollowCount in", values, "userFollowCount");
            return (Criteria) this;
        }

        public Criteria andUserFollowCountNotIn(List<Integer> values) {
            addCriterion("userFollowCount not in", values, "userFollowCount");
            return (Criteria) this;
        }

        public Criteria andUserFollowCountBetween(Integer value1, Integer value2) {
            addCriterion("userFollowCount between", value1, value2, "userFollowCount");
            return (Criteria) this;
        }

        public Criteria andUserFollowCountNotBetween(Integer value1, Integer value2) {
            addCriterion("userFollowCount not between", value1, value2, "userFollowCount");
            return (Criteria) this;
        }

        public Criteria andUserFansCountIsNull() {
            addCriterion("userFansCount is null");
            return (Criteria) this;
        }

        public Criteria andUserFansCountIsNotNull() {
            addCriterion("userFansCount is not null");
            return (Criteria) this;
        }

        public Criteria andUserFansCountEqualTo(Integer value) {
            addCriterion("userFansCount =", value, "userFansCount");
            return (Criteria) this;
        }

        public Criteria andUserFansCountNotEqualTo(Integer value) {
            addCriterion("userFansCount <>", value, "userFansCount");
            return (Criteria) this;
        }

        public Criteria andUserFansCountGreaterThan(Integer value) {
            addCriterion("userFansCount >", value, "userFansCount");
            return (Criteria) this;
        }

        public Criteria andUserFansCountGreaterThanOrEqualTo(Integer value) {
            addCriterion("userFansCount >=", value, "userFansCount");
            return (Criteria) this;
        }

        public Criteria andUserFansCountLessThan(Integer value) {
            addCriterion("userFansCount <", value, "userFansCount");
            return (Criteria) this;
        }

        public Criteria andUserFansCountLessThanOrEqualTo(Integer value) {
            addCriterion("userFansCount <=", value, "userFansCount");
            return (Criteria) this;
        }

        public Criteria andUserFansCountIn(List<Integer> values) {
            addCriterion("userFansCount in", values, "userFansCount");
            return (Criteria) this;
        }

        public Criteria andUserFansCountNotIn(List<Integer> values) {
            addCriterion("userFansCount not in", values, "userFansCount");
            return (Criteria) this;
        }

        public Criteria andUserFansCountBetween(Integer value1, Integer value2) {
            addCriterion("userFansCount between", value1, value2, "userFansCount");
            return (Criteria) this;
        }

        public Criteria andUserFansCountNotBetween(Integer value1, Integer value2) {
            addCriterion("userFansCount not between", value1, value2, "userFansCount");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table bloguser
     *
     * @mbg.generated do_not_delete_during_merge Mon Nov 02 23:27:58 CST 2020
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table bloguser
     *
     * @mbg.generated Mon Nov 02 23:27:58 CST 2020
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}