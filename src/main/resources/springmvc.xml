<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:p="http://www.springframework.org/schema/p"
       xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
	http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.0.xsd
	http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <context:component-scan base-package="com.jkblog.controller"></context:component-scan>

    <!--定义静态资源的处理-->
    <mvc:annotation-driven validator="validator"/>
    <mvc:default-servlet-handler/>

    <!--    视图解析器-->
    <bean id="internalResourceViewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/view/"></property>
        <property name="suffix" value=".jsp"></property>
    </bean>

    <!--    处理文件上传-->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="defaultEncoding" value="UTF-8"></property>
        <property name="maxUploadSize" value="10240000"></property>
    </bean>

    <mvc:resources mapping="/resources/**" location="/resources/"></mvc:resources>
<!--    <mvc:resources mapping="/WEB-INF/static/css/**" location="/WEB-INF/static/css/"></mvc:resources>-->


    <!--    配置拦截器-->
    <!--
       /**的意思是所有文件夹及里面的子文件夹
       /*是所有文件夹，不含子文件夹
       /是web项目的根目录
     -->

    <mvc:interceptors>
        <!--检测是否登录，没有登录查找cookie，如果有就设置-->
        <mvc:interceptor>
            <mvc:mapping path="/**"/>
            <mvc:exclude-mapping path="/resources/**"/>
            <bean class="com.jkblog.interceptor.CookieInterceptor"></bean>
        </mvc:interceptor>
        <!--没登录不允许访问-->
        <mvc:interceptor>
            <mvc:mapping path="/blogedit"/>
            <mvc:mapping path="/loginout"/>
            <mvc:mapping path="/blogdelete"/>
            <mvc:mapping path="/userinfo"/>
            <bean class="com.jkblog.interceptor.UnLoginedInterceptor"></bean>
        </mvc:interceptor>
        <!--登陆了不允许访问-->
        <mvc:interceptor>
            <mvc:mapping path="/register"/>
            <mvc:mapping path="/login"/>
            <bean class="com.jkblog.interceptor.LoginedInterceptor"></bean>
        </mvc:interceptor>
    </mvc:interceptors>

    <!--数据校验-->
    <bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
        <property name="providerClass" value="org.hibernate.validator.HibernateValidator"></property>
        <property name="validationMessageSource" ref="validationMessageSource"></property>
    </bean>
    <bean id="validationMessageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
        <property name="basenames">
            <list>
                <value>classpath:validate</value>
            </list>
        </property>
        <property name="fileEncodings" value="utf-8" />
        <property name="cacheSeconds" value="120" />
    </bean>

    <!--    配置异常解析器-->
    <bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
        <!--    为所有异常定义默认的处理页面,exceptionMappings未定义的，
                value表示跳转页面，至于文件路径和后缀已经在 viewResolver 中指定-->
        <property name="defaultErrorView" value="error/defaultError"></property>
        <!--    定义异常处理页面用来获取异常信息的变量名，被存放到 request 域中-->
        <property name="exceptionAttribute" value="exception"></property>
        <!--    需要特殊处理的异常，全类名作为key，异常页文件名作为值，可将不同的异常映射到不同的页面上-->
        <!--<property name="exceptionMappings">
            <props>
                <prop key="com.jkblog.exception.UserInfoNotCorrectException">nullPointer</prop>
            </props>
        </property>-->
    </bean>

</beans>